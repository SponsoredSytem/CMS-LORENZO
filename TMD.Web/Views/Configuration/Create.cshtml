@model TMD.Web.ViewModels.ProductConfigurationViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Session["MenuKey"] = 21;
    ViewBag.Title = "Add/update Customers";
}


@using (Html.BeginForm("Create", "Configuration", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="portlet box blue-hoki">
        <div class="portlet-title">

            <div class="tools">
                @*<a href="javascript:;" class="collapse">
                    </a>*@

                <button type="submit" class="btn blue" onclick="return(ValidateConfigFields(event));">Save</button>
                <a href="~/Configuration/Create">
                    <button type="button" class="btn default">Cancel</button>
                </a>
            </div>
            <div class="caption">
                <i class="fa fa-male"></i>Update Configuration
            </div>
        </div>

        <div class="portlet-body form">
            <div class="container-fluid">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Configuration.Id)
                @Html.HiddenFor(m => m.Configuration.RecCreatedBy)
                @Html.HiddenFor(m => m.Configuration.RecCreatedDate)

                <div class="form-group margin-top-20">
                    <label class="col-md-3 control-label">Product Code Prefix</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.Configuration.ProductCodePrefix, new { @class = "form-control input-circle", @id = "ProductCodePrefix" })
                    </div>
                </div>
                
                <div class="form-group margin-top-20">
                    <label class="col-md-3 control-label">Max Allowed Discount</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.Configuration.MaxAllowedDiscount, new { @class = "form-control input-circle", @id = "MaxAllowedDiscount" })
                        @Html.ValidationMessageFor(m => m.Configuration.MaxAllowedDiscount)
                    </div>
                </div>
                
                <div class="form-group margin-top-20">
                    <label class="col-md-3 control-label">Emails <small>"," separated</small></label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.Configuration.Emails, new { @class = "form-control input-circle", @id = "Emails" })
                    </div>
                </div>
                <div class="form-group margin-top-20">
                    @Html.LabelFor(m => m.Configuration.DefaultVendorId, new { @class = "col-md-3 control-label requiredLabel" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Configuration.DefaultVendorId, new SelectList(Model.vendorModel, "VendorId", "Name"), "Select Vendor", new { @class = "form-control input-circle mandatory", @id = "Vendors" })
                        @Html.ValidationMessageFor(model => model.Configuration.DefaultVendorId)
                    </div>

                </div>
                <div class="form-group margin-top-20">
                    <label class="col-md-3 control-label">Security Password</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.Configuration.SecurityPassword, new { @class = "form-control input-circle", @id = "SecurityPassword" })
                    </div>
                </div>

                
                <div class="form-group margin-top-20">
                    <label class="col-md-3 control-label">Comments</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.Configuration.Comments, new { @class = "form-control input-circle", @id = "Comments" })
                    </div>
                </div>
            </div>

        </div>
    </div>
}

<script>
    $(document).ready(function () {
     
    });
</script>