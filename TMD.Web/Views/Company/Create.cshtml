@using System.Configuration
@model TMD.Web.ViewModels.CompanyViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Create Company";
    string btnText = "Save";
    var setDiasble = "false";
    string contactType = "";
    Session["MenuKey"] = 3;
    long cityIdSelected=0;
    if (Model.Company != null)
    {
        if (Model.Company.CompanyId > 0)
        {
            ViewBag.Title = "Update Company";
            btnText = "Update";
            setDiasble = "readonly";
        }
        cityIdSelected = (long)Model.Company.CityId;
    }
}
<link rel="stylesheet" type="text/css" href="~/Content/css/select2.css" />
<script type="text/javascript" src="~/Scripts/plugins/select2.js"></script>

@using (Html.BeginForm("Create", "Company", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="portlet box blue-hoki">
        <div class="portlet-title">

            <div class="tools">
                <button type="submit" class="btn btn-circle blue" onclick="return(ValidateFields(event));">@btnText</button>
                <a href="~/Company/Index">
                    <button type="button" class="btn btn-circle default">Cancel</button>
                </a>
            </div>
            <div class="caption">
                <i class="fa fa-male"></i>@ViewBag.Title
            </div>
        </div>

        <div class="portlet-body form">
            <div class="container-fluid formMinHeight500">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Company.CompanyId)
                @Html.HiddenFor(m => m.Company.RecCreatedBy)
                @Html.HiddenFor(m => m.Company.RecCreatedDate)
                @Html.HiddenFor(m => m.Company.DeletedCompanyContacts, new { @id = "DeletedCompanyContacts" })
                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.CompanyName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-file-o"></i>
                        @Html.TextBoxFor(m => m.Company.CompanyName, new { @class = "form-control mandatory", placeholder = "Company Name" })
                    </div>
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.LegalName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-file-pdf-o"></i>
                        @Html.TextBoxFor(m => m.Company.LegalName, new { @class = "form-control mandatory", placeholder = "Legal Name" })
                    </div>
                </div>


                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.VATNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-file-zip-o"></i>
                        @Html.TextBoxFor(m => m.Company.VATNumber, new { @class = "form-control mandatory", placeholder = "V.A.T Number" })
                    </div>
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.VATOffice, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-file-text"></i>
                        @Html.TextBoxFor(m => m.Company.VATOffice, new { @class = "form-control mandatory", placeholder = "V.A.T Office" })
                    </div>
                </div>


                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.Label("City", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon">
                        @*<i class="fa fa-user"></i>*@
                        @Html.DropDownList("City", new SelectList(Model.Cities, "CityId", "CityName", Model.Company.CityId), "Select City", new { @class = "input-medium select2me", id = "CityId" })
                    </div>
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.MunicipalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon select2DDLParent">
                        @*<i class="fa fa-user"></i>*@
                        @Html.DropDownListFor(m => m.Company.MunicipalId, new SelectList(Model.Municipals, "MunicipalId", "MunicipalName", Model.Company.MunicipalId), "Select Municipal", new { @class = "input-medium select2me mandatory", id = "MunicipalId" })
                    </div>
                </div>

                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.SourceId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon select2DDLParent">
                        @*<i class="fa fa-file-code-o"></i>*@
                        @Html.DropDownListFor(m => m.Company.SourceId, new SelectList(Model.Sources, "SourceId", "SourceName", Model.Company.SourceId), "Select Source", new { @class = "input-medium select2me mandatory", id = "SourceId" })
                    </div>
                </div>
                
                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.Label("Account Holder", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon">
                        @*<i class="fa fa-user"></i>*@
                        @Html.DropDownList("AccountHolder", new SelectList(Model.Employees, "Id", "Name", Model.Company.AccountHolderId), "Select Employee", new { @class = "input-medium select2me", id = "AccountHolderId" })
                    </div>
                    <div class="col-md-2 textAlignRight">
                        @Html.Label("Status", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon select2DDLParent">
                        @*<i class="fa fa-user"></i>*@
                        @Html.DropDownListFor(m => m.Company.StatusId, new SelectList(Model.CompanyStatuses, "Id", "Title", Model.Company.StatusId), "Select Status", new { @class = "input-medium select2me mandatory", id = "StatusId" })
                    </div>
                </div>

                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.Telephone, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-user"></i>
                        @Html.TextBoxFor(m => m.Company.Telephone, new { @class = "form-control mandatory", placeholder = "Telephone" })
                    </div>
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.Fax, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-user"></i>
                        @Html.TextBoxFor(m => m.Company.Fax, new { @class = "form-control mandatory", placeholder = "Fax" })
                    </div>
                </div>


                <div class="row form-group margin-top-20">
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.Email, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-user"></i>
                        @Html.TextBoxFor(m => m.Company.Email, new { @class = "form-control mandatory", placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Company.Email)
                    </div>
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.Address, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-user"></i>
                        @Html.TextBoxFor(m => m.Company.Address, new { @class = "form-control mandatory", placeholder = "Address" })
                    </div>
                </div>


                <div class="row form-group margin-top-20">
                    @*<div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.CompanyDescription, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-user"></i>
                        @Html.TextAreaFor(m => m.Company.CompanyDescription, new { @class = "form-control mandatory", placeholder = "Description" })
                    </div>*@
                    <div class="col-md-2 textAlignRight">
                        @Html.LabelFor(m => m.Company.Notes, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 input-icon ">
                        <i class="fa fa-user"></i>
                        @Html.TextAreaFor(m => m.Company.Notes, new { @class = "form-control", placeholder = "Notes" })
                    </div>
                </div>
                
                <div class="portlet box blue-hoki">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-cogs"></i>Company Contacts
                        </div>
                        <div class="tools">
                            <a href="#ContactModal" data-toggle="modal" style="color:white !important; font-size: 16px; text-decoration: underline; ">Add New Contact</a>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="table-responsive formMinHeight142_3Rows">
                            <table id="CompanyContacts" class="table table-striped table-responsive">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>Position</th>
                                        <th>Cell</th>
                                        <th>Email</th>
                                        <th>Contacy Type</th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="CompanyContactsTableBody">
                                    @if (Model.CompanyContacts.Any())
                                    {
                                        for (int i = 0; i < Model.CompanyContacts.Count; i++)
                                        {
                                            <tr data-id="@i">
                                                @Html.HiddenFor(m => m.CompanyContacts[i].CompanyContactId)
                                                @Html.HiddenFor(m => m.CompanyContacts[i].CompanyId)
                                                <input name='CompanyContacts.Index' type='hidden' value=@i style='display:none' />
                                                <td style='display:none'>
                                                    
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(m => m.CompanyContacts[i].FirstName)
                                                    <span id="spanFirstName_@i">
                                                        @Html.DisplayFor(m => m.CompanyContacts[i].FirstName)
                                                    </span>
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(m => m.CompanyContacts[i].LastName)
                                                    <span id="spanLastName_@i">
                                                        @Html.DisplayFor(m => m.CompanyContacts[i].LastName)
                                                    </span>
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(m => m.CompanyContacts[i].Position)
                                                    <span id="spanPosition_@i">
                                                        @Html.DisplayFor(m => m.CompanyContacts[i].Position)
                                                    </span>
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(m => m.CompanyContacts[i].PhoneCell)
                                                    <span id="spanPhoneCell_@i">
                                                        @Html.DisplayFor(m => m.CompanyContacts[i].PhoneCell)
                                                    </span>
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(m => m.CompanyContacts[i].Email)
                                                    <span id="spanEmail_@i">
                                                        @Html.DisplayFor(m => m.CompanyContacts[i].Email)
                                                    </span>
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(m => m.CompanyContacts[i].ContactType)
                                                    <span id="spanContactType_@i">
                                                        @{
                                                            contactType = Model.CompanyContacts[i].ContactType == "1" ? "Primary" : Model.CompanyContacts[i].ContactType == "0" ? "Secondary":"";
                                                        }

                                                        @contactType
                                                    </span>
                                                </td>
                                                <td><a href="javascript:;" class="editContact">Edit</a></td>
                                                <td><a href="javascript:;" class="deleteRow">X</a></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="ContactModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Company Contact</h4>
            </div>
            <div class="modal-body">
                <div class="scroller" style="height:400px" data-always-visible="1" data-rail-visible1="1">
                    <input type="hidden" id="ContactModalIndex" />
                    <div class="row form-group margin-top-20">
                        <div class="col-md-3">
                            <label class="control-label requiredLabel">First Name</label>
                        </div>
                        <div class="col-md-6 input-icon ">
                            <i class="fa fa-user"></i>
                            <input type="text" class="form-control mandatoryModal" id="ccFirstName" />
                        </div>
                    </div>
                    <div class="row form-group margin-top-20">
                        <div class="col-md-3">
                            <label class="control-label requiredLabel">Last Name</label>
                        </div>
                        <div class="col-md-6 input-icon ">
                            <i class="fa fa-user"></i>
                            <input type="text" class="form-control mandatoryModal" id="ccLastName" />
                        </div>
                    </div>
                    <div class="row form-group margin-top-20">
                        <div class="col-md-3">
                            <label class="control-label">Position</label>
                        </div>
                        <div class="col-md-6 input-icon ">
                            <i class="fa fa-user-md"></i>
                            <input type="text" class="form-control" id="ccPosition" />
                        </div>
                    </div>
                    <div class="row form-group margin-top-20">
                        <div class="col-md-3">
                            <label class="control-label">Cell#</label>
                        </div>
                        <div class="col-md-6 input-icon ">
                            <i class="fa fa-phone-square"></i>
                            <input type="text" class="form-control" id="ccCell" />
                        </div>
                    </div>
                    <div class="row form-group margin-top-20">
                        <div class="col-md-3">
                            <label class="control-label requiredLabel">Email</label>
                        </div>
                        <div class="col-md-6 input-icon ">
                            <i class="fa fa-envelope"></i>
                            <input type="text" class="form-control mandatoryModal" id="ccEmail" />
                        </div>
                    </div>
                    <div class="row form-group margin-top-20">
                        <div class="col-md-3">
                            <label class="control-label">Contact Type</label>
                        </div>
                        <div class="col-md-6 input-icon ">
                            <i class="fa fa-tag"></i>
                            <select class="form-control" id="ccContactType">
                                <option value="">Select Contact Type</option>
                                <option value="1">Primary</option>
                                <option value="0">Secondary</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn default">Close</button>
                <button type="button" id="CompanyContactsSave" class="btn green">Save changes</button>
            </div>
        </div>
    </div>
</div>
<script>
    var hostURL = '@ConfigurationManager.AppSettings["HostURL"]';
    $(document).ready(function () {
        var companyContactsTable = $('#CompanyContacts').dataTable({
            "paging": false,
            "iDisplayLength": 3,
            "bFilter": false,
            "bLengthChange": false,
            "columnDefs": [
            {
                "targets": [ 0 ],
                "visible": false,
                "searchable": false
            },
            {
                "targets": [5,6],
                "sortable": false
            }]
        });

        
        $('.select2me').select2({
            placeholder: "Select",
            allowClear: true
        });
        $("#CityId").on('change', function () {
            LoadMuniciaplByCity();
        });
        if ('@cityIdSelected'>0) {
            LoadMuniciaplByCity();
        }
    });
    $('.deleteRow').live("click", function () {
        var count = $("#CompanyContactsTableBody").children("tr").length;
        if (count > 0) {
            var contact = $("#DeletedCompanyContacts").val();
            var contactToBeDeleted = $(this).parent().parent().children("input").first().attr("value");
            if (contactToBeDeleted != undefined) {
                if (contact == "") {
                    contact = contactToBeDeleted;
                } else {
                    contact = contact + "," + contactToBeDeleted;
                }
                
                $("#DeletedCompanyContacts").val(contact);
            }
            $(this).parent().parent().remove();
        }
    });
    //add data in row from popup
    $('#CompanyContactsSave').on("click", function () {
        //validate fields
        if (!(validateEmail('#ccEmail') && ValidateFieldsByClass("mandatoryModal"))) {
            return false;
        }
        var Fname = $("#ccFirstName").val();
        var Lname = $("#ccLastName").val();
        var Position = $("#ccPosition").val();
        var Cell = $("#ccCell").val();
        var Email = $("#ccEmail").val();
        var Type = $("#ccContactType").val();
        //var index = $("#CompanyContactsTableBody").children("tr").length;
        var index = $("#ContactModalIndex").val();

        if (index == "") {
            //add new row

            if ($("#CompanyContactsTableBody").children("tr").children("td").html() == "No data available in table") {
                index = index - 1;
                $("#CompanyContactsTableBody").children("tr").remove();
            }
            var indexCell = "<td style='display:none'>" +
                "<input name='CompanyContacts.Index' type='hidden' value='" + index + "' />" +
                "<input name='CompanyContacts[" + index + "].CompanyContactId' id='CompanyContacts_" + index + "__CompanyContactId' type='hidden' />" +
                "<input name='CompanyContacts[" + index + "].CompanyId' id='CompanyContacts_" + index + "__CompanyId' type='hidden' />" +
                "</td>";
            var contactType = Type == 1 ? "Primary" : Type == 0 ? "Secondary":"";
            //CompanyContacts
            var html = ' <tr data-id=' + index + '>' +
                indexCell +
                '<td>' +
                '<input id="CompanyContacts_' + index + '__FirstName" name="CompanyContacts[' + index + '].FirstName" type="hidden" value="' + Fname + '"><span id="spanFirstName_' + index + '">' + Fname + '</span>' +
                '</td>' +
                '<td>' +
                '<input id="CompanyContacts_' + index + '__LastName" name="CompanyContacts[' + index + '].LastName" type="hidden" value="' + Lname + '"><span id="spanLastName_' + index + '">' + Lname + '</span>' +
                '</td>' +
                '<td>' +
                '<input id="CompanyContacts_' + index + '__Position" name="CompanyContacts[' + index + '].Position" type="hidden" value="' + Position + '"><span id="spanPosition_' + index + '">' + Position + '</span>' +
                '</td>' +
                '<td>' +
                '<input id="CompanyContacts_' + index + '__PhoneCell" name="CompanyContacts[' + index + '].PhoneCell" type="hidden" value="' + Cell + '"><span id="spanPhoneCell_' + index + '">' + Cell + '</span>' +
                '</td>' +
                '<td>' +
                '<input id="CompanyContacts_' + index + '__Email" name="CompanyContacts[' + index + '].Email" type="hidden" value="' + Email + '"><span id="spanEmail_' + index + '">' + Email + '</span>' +
                '</td>' +
                '<td>' +
                '<input id="CompanyContacts_' + index + '__ContactType" name="CompanyContacts[' + index + '].ContactType" type="hidden" value="' + Type + '"><span id="spanContactType_' + index + '">' + contactType + '</span>' +
                '</td>' +
                '<td><a href="javascript:;">Edit</a></td>' +
                '<td><a href="javascript:;" class="deleteRow">X</a></td>' +
                '</tr>';
            $('#CompanyContactsTableBody').append(html);
        } else {
            //change input text value
            $("#CompanyContacts_" + index + "__FirstName").val(Fname);
            $("#CompanyContacts_" + index + "__LastName").val(Lname);
            $("#CompanyContacts_" + index + "__Position").val(Position);
            $("#CompanyContacts_" + index + "__PhoneCell").val(Cell);
            $("#CompanyContacts_" + index + "__Email").val(Email);
            $("#CompanyContacts_" + index + "__ContactType").val(Type);
            //change rows values, that are being displayed
            $("#spanFirstName_" + index).text(Fname);
            $("#spanLastName_" + index).text(Lname);
            $("#spanPosition_" + index).text(Position);
            $("#spanPhoneCell_" + index).text(Cell);
            $("#spanEmail_" + index).text(Email);
            $("#spanContactType_" + index).text(contactType);
        }
        
            $("#ContactModal").modal('toggle');
            $('#ContactModal input').val('');
        ////remove validation
        //$("form").removeData("validator").removeData("unobtrusiveValidation");

        ////Parse the form again to apply new validations
        //$.validator.unobtrusive.parse("form");
    });

    //Load popup data
    $('.editContact').live('click', function () {
        //get the id from tr that is selected for the item popup
        var index = $(event.target).closest('tr').data('id');
        //save index in model
        $("#ContactModalIndex").val(index);
        //get item's values
        var ccFirstName = $("#CompanyContacts_" + index + "__FirstName").val();
        var ccLastName = $("#CompanyContacts_" + index + "__LastName").val();
        var ccPosition = $("#CompanyContacts_" + index + "__Position").val();
        var ccCell = $("#CompanyContacts_" + index + "__PhoneCell").val();
        var ccEmail = $("#CompanyContacts_" + index + "__Email").val();
        var ccContactType = $("#CompanyContacts_" + index + "__ContactType").val();

        $("#ccFirstName").val(ccFirstName);
        $("#ccLastName").val(ccLastName);
        $("#ccPosition").val(ccPosition);
        $("#ccCell").val(ccCell);
        $("#ccEmail").val(ccEmail);
        $("#ccContactType").val(ccContactType);

        $("#ContactModal").modal('toggle');
    });

    function LoadMuniciaplByCity() {
        var code = $("#CityId").val();
        if (code == "")
        {
            $("#MunicipalId").empty();
            var newOption = "<option value='0'> Select Municipal </option>";
            $("#MunicipalId").append(newOption);
            return;
        }
        $.blockUI({ message: '<h3><img src="' + hostURL + '/Images/loading.gif" height=55px; width=55px; /> Fetching Municipals...</h2>' });

        if (code != "" && code != "0") {
            var selectedMunicipal = '@Model.Company.MunicipalId';
            $.ajax({
                url: hostURL+"/Api/Municipal",
                type: "GET",
                data: { id: code },
                dataType: "json",
                success: function(data) {
                    $("#MunicipalId").empty();
                    $.each(data, function (i, item) {
                        var selection = "";//(selectedMunicipal == item.MunicipalId) ? 'selected' : '';
                        var newOption = "<option value='" + item.MunicipalId + "' " + selection + ">" + item.MunicipalName + "</option>";
                        $("#MunicipalId").append(newOption);
                    });
                    $("#MunicipalId").val(selectedMunicipal).change();
                    $.unblockUI();
                },
                error: function(textStatus, errorThrown) {
                    $.unblockUI();
                    alert("Status: " + textStatus);
                    alert("Error: " + errorThrown);
                }
            });
        }
    }
</script>